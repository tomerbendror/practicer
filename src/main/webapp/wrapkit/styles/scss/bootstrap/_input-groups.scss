//
// Input groups
// --------------------------------------------------

// Base styles
// -------------------------
.input-group {
  position: relative; // For dropdowns
  display: table;
  border-collapse: separate; // prevent input groups from inheriting border styles from table cells when placed within a table

  // Undo padding and float of grid classes
  &[class*="col-"] {
    float: none;
    padding-left: 0;
    padding-right: 0;
  }

  .form-control {
    // Ensure that the input is always above the *appended* addon button for
    // proper border colors.
    position: relative;
    z-index: 2;

    // IE9 fubars the placeholder attribute in text inputs and the arrows on
    // select elements in input groups. To fix it, we float the input. Details:
    // https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
    float: left;

    width: 100%;
    margin-bottom: 0;
  }

  > .form-control-feedback{
    top: 0;
  }
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .btn {
  @extend .input-lg;
}
.input-group-sm > .form-control,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .btn {
  @extend .input-sm;
}


// Display as table-cell
// -------------------------
.input-group-addon,
.input-group-btn,
.input-group .form-control {
  display: table-cell;

  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}
// Addon and addon wrapper for buttons
.input-group-addon,
.input-group-btn {
  width: 1%;
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
}

// Text input groups
// -------------------------
.input-group-addon {
  padding: ($padding-base-vertical/2) $padding-base-horizontal;
  font-size: $font-size-base;
  font-weight: normal;
  line-height: 1;
  color: $input-color;
  text-align: center;
  background-color: $input-group-addon-bg;
  border: 1px solid $input-group-addon-border-color;
  border-radius: $border-radius-base;
  min-width: 40px;

  // Sizing
  &.input-sm {
    padding: $padding-small-vertical $padding-small-horizontal;
    font-size: $font-size-small;
    border-radius: $border-radius-small;
  }
  &.input-lg {
    padding: $padding-large-vertical $padding-large-horizontal;
    font-size: $font-size-large;
    border-radius: $border-radius-large;
  }

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }

  > .nice-checkbox,
  > .nice-radio{
    margin-top: -1em;
    left: 4px;
  }
}

// Reset rounded corners
.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
  @include border-right-radius(0);
}
.input-group-addon:first-child {
  border-right: 0;
}
.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
  @include border-left-radius(0);
}
.input-group-addon:last-child {
  border-left: 0;
}

// Button input groups
// -------------------------
.input-group-btn {
  position: relative;
  // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  font-size: 0;
  white-space: nowrap;

  // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > .btn {
    position: relative;
    line-height: $line-height-computed;
    + .btn {
      margin-left: -1px;
    }
    // Bring the "active" button to the front
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
  }

  // Negative margin to only have a 1px border between the two
  &:first-child {
    > .btn,
    > .btn-group {
      margin-right: -1px;
    }
  }
  &:last-child {
    > .btn + .btn,
    > .btn-group {
      margin-left: -1px;
    }
  }
}


.input-group-textarea{
  vertical-align: top;
  padding-top: $padding-base-vertical;
}


.input-group{
  direction: ltr;
  &.input-group-in{
    border: 1px solid $input-border;
    // background-color: #ffffff;
    border-radius: $border-radius-base;
    background-color: #fff;
    @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

    &.input-group-lg{
      border-radius: $border-radius-large;
    }
    &.input-group-sm{
      border-radius: $border-radius-small;
    }

    &.focus{
      border-color: $input-border-focus;
      outline: 0;
      // $color-rgba: rgba(red($input-border-focus), green($input-border-focus), blue($input-border-focus), .6);
      // @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px $color-rgba);
    }

    > .input-group-btn > .btn,
    > .input-group-addon,
    > .twitter-typeahead > .form-control,
    > .form-control {
      border: none;
      background-color: transparent;
    }

    > .twitter-typeahead > .form-control,
    > .form-control {
      height: $input-height-base - 2;
      padding: ($padding-base-vertical - 1) $padding-base-horizontal;

      &.input-sm{
        height: $input-height-small - 2;
        padding: ($padding-small-vertical - 1) $padding-small-horizontal;
      }
      &.input-lg{
        height: $input-height-large - 2;
        padding: ($padding-large-vertical - 1) $padding-large-horizontal;
      }
    }

    > .twitter-typeahead > .form-control,
    > .form-control {
      padding-right: 0;
      padding-left: 0;
    }

    > .twitter-typeahead:first-child > .form-control,
    > .form-control:first-child {
      padding-right: 0;
      padding-left: $padding-base-horizontal;
    }

    > .twitter-typeahead:last-child > .form-control,
    > .form-control:last-child {
      padding-right: $padding-base-horizontal;
      padding-left: 0;
    }

    > .form-control:focus,
    > .form-control[disabled],
    > .form-control[readonly],
    > fieldset[disabled] .form-control,
    > .twitter-typeahead > .form-control:focus,
    > .twitter-typeahead > .form-control[disabled],
    > .twitter-typeahead > .form-control[readonly] {
      border: none !important;
      background-color: transparent;
      box-shadow: none;
    }

    > .input-group-btn > .btn {
      color: inherit;
      padding: 0 $padding-base-horizontal;
      border: none;
      background-color: transparent;
      outline: 0;
      box-shadow: none;
      height: auto;

      &:hover,
      &:focus,
      &:active,
      &.active,
      &.open {
        color: inherit;
        background-color: transparent;
      }
      &:focus{
        color: $state-info-text;
      }
    }

    &.input-group-lg{
      > .input-group-btn > .btn {
        padding: 0 $padding-large-horizontal;
      }
    }

    &.input-group-sm{
      > .input-group-btn > .btn {
        padding: 0 $padding-small-horizontal;
      }
    }
    
    > .input-group-btn{
      &:first-child{
        padding-right: $padding-base-vertical;
        padding-left: 0;

        > .btn{
          border-right: 1px solid $input-border;
        }
      }
      &:last-child{
        padding-right: 0;
        padding-left: $padding-base-vertical;

        > .btn{
          border-right: none;
          border-left: 1px solid $input-border;
        }
      }
    }
  }
}

.wrapkit-content-rtl .input-group .form-control{
  direction: rtl;
}



// Feedback states (move from _form.scss to fixed in input-group-in)
.has-success {
  @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}
.has-warning {
  @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}
.has-error {
  @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}